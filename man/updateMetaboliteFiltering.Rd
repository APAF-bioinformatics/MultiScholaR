% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/QC_visualisation.R
\name{updateMetaboliteFiltering}
\alias{updateMetaboliteFiltering}
\title{Update and Visualize Metabolomics Filtering Progress}
\usage{
updateMetaboliteFiltering(
  theObject,
  step_name,
  publication_graphs_dir = NULL,
  omics_type = NULL,
  time_dir = NULL,
  overwrite = FALSE,
  return_grid = FALSE,
  group_id_col = NULL,
  sample_id_col = NULL,
  metabolite_id_col = NULL,
  is_pattern = NULL
)
}
\arguments{
\item{theObject}{A S4 object (e.g., \code{MetaboliteAssayData}, \code{SummarizedExperiment},
\code{MultiAssayExperiment}) containing metabolomics data. Must provide
access to a list of assays (data frames/tibbles with metabolite rows
and sample columns) and a colData/design matrix linking samples to groups.}

\item{step_name}{Character string uniquely identifying the current filtering step.}

\item{publication_graphs_dir}{Optional path for saving plots. If provided, the function
will try to find the corresponding time_dir.}

\item{omics_type}{Optional character string specifying the omics type (e.g., "metabolomics").
If provided and project_dirs exists in the global environment, will use
project_dirs[\link{omics_type}]$time_dir for plot saving.}

\item{time_dir}{Optional explicit path to the time directory. If provided, this overrides
other methods of finding the time directory.}

\item{overwrite}{Logical, whether to overwrite existing data for \code{step_name}.}

\item{return_grid}{Logical, whether to return a \code{gridExtra} combined plot.}

\item{group_id_col}{Character, name of the column in \code{colData(theObject)} specifying groups.}

\item{sample_id_col}{Character, name of the sample ID column in \code{colData(theObject)}.}

\item{metabolite_id_col}{Character, name of the metabolite ID column in assay data.}

\item{is_pattern}{Character, regex for identifying internal standards. If not provided,
attempts to get from \code{theObject@internal_standard_regex} if slot exists.}
}
\value{
If \code{return_grid} is \code{TRUE}, a \code{grob} object. Otherwise, an invisible list
containing individual \code{ggplot} objects.
}
\description{
Tracks and visualizes the impact of filtering steps on metabolomics
data, updating a global \code{FilteringProgressMetabolomics} object.
Generates QC plots summarizing the changes.
}
\details{
This function serves as the primary interface for tracking metabolomics QC.
It performs the following:
\itemize{
\item Initializes or retrieves the global \code{FilteringProgressMetabolomics} object.
\item Takes a \code{MetaboliteAssayData} object (or similar S4 containing assays list
and design matrix) as input for the current processing step.
\item Extracts the list of assay data frames/tibbles and the design matrix.
\item For each assay, calls helper functions (\code{countUniqueMetabolites},
\code{countMetabolitesPerSample}, \code{calculateMissingness},
\code{calculateSumIntensityPerSample}, \code{calculateMetaboliteCVs},
\code{getInternalStandardMetrics}) to calculate QC metrics.
\item Calls \code{calculateTotalUniqueMetabolitesAcrossAssays} for an overall count.
\item Updates the global \code{FilteringProgressMetabolomics} object with the
calculated metrics for the given \code{step_name}.
\item Generates summary plots visualizing the tracked metrics across steps.
\item Optionally saves plots to disk if \code{publication_graphs_dir} and a time
directory are available.
\item Returns either a combined grid plot or an invisible list of plots.
}

\strong{Important:} Relies on and modifies the global \code{filtering_progress_metabolomics} object.
Requires helper functions (defined previously in this file) to be available.
For plot saving, requires either \code{time_dir} in the global environment or access to
the appropriate directory via \code{project_dirs$omics_type$time_dir}.
}
