% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/multiomics_enrichment_functions.R
\name{runStringDbEnrichmentFromDEResults}
\alias{runStringDbEnrichmentFromDEResults}
\title{Run STRING DB Enrichment Analysis from DE Results S4 Object}
\usage{
runStringDbEnrichmentFromDEResults(
  de_results_for_enrichment,
  contrast_name = NULL,
  ranking_method = "combined_score",
  identifier_column = "Protein.Ids",
  filter_significant = FALSE,
  fdr_threshold = 0.05,
  result_label = NULL,
  results_dir = "string_enrichment_results",
  api_key = NULL,
  species = "9606",
  ge_fdr = 0.05,
  ge_enrichment_rank_direction = -1,
  polling_interval_seconds = 10,
  max_polling_attempts = 30
)
}
\arguments{
\item{de_results_for_enrichment}{An S4 object of class de_results_for_enrichment containing
differential expression results across multiple contrasts.}

\item{contrast_name}{Character string. Name of the specific contrast to analyze.
Must match one of the names in de_results_for_enrichment@de_data.
If NULL, will use the first contrast. Default: NULL.}

\item{ranking_method}{Character string. Method for ranking proteins. Options:
\itemize{
\item "fdr_qvalue": Rank by FDR q-value (ascending, most significant first)
\item "log2fc": Rank by log2 fold change (descending, highest FC first)
\item "combined_score": Use sign(log2FC) * (-log10(fdr_qvalue)) for ranking
\item "none": No ranking applied (proteins in original order)
Default: "combined_score".
}}

\item{identifier_column}{Character string. Name of the column containing protein identifiers.
Default: "Protein.Ids".}

\item{filter_significant}{Logical. Whether to filter to only significant proteins (fdr_qvalue < 0.05).
Default: FALSE (include all proteins).}

\item{fdr_threshold}{Numeric. FDR threshold for filtering significant proteins when filter_significant=TRUE.
Default: 0.05.}

\item{result_label}{Character string. A label used for naming output files.
If NULL, will use the contrast name. Default: NULL.}

\item{results_dir}{Character string. The path to the directory where enrichment
results will be saved. Default: "string_enrichment_results".}

\item{api_key}{Character string. Your personal STRING API key.
Default: NULL.}

\item{species}{Character string. NCBI/STRING species identifier.
Default: "9606" (Homo sapiens).}

\item{ge_fdr}{Numeric. FDR threshold for gene expression enrichment.
Default: 0.05.}

\item{ge_enrichment_rank_direction}{Integer. Direction for enrichment rank
(-1, 0, or 1). Default: -1.}

\item{polling_interval_seconds}{Numeric. Seconds to wait between polling attempts.
Default: 10.}

\item{max_polling_attempts}{Numeric. Maximum polling attempts before timing out.
Default: 30.}
}
\value{
A data frame containing the enrichment results from STRING DB.
Returns NULL if the process fails.
}
\description{
This function extracts differential expression data from a de_results_for_enrichment S4 object,
applies the specified ranking method, and performs STRING DB enrichment analysis using the
existing runOneStringDbRankEnrichmentMofa function.
}
\examples{
\dontrun{
# Assuming you have a de_results_for_enrichment object
enrichment_results <- runStringDbEnrichmentFromDEResults(
  de_results_for_enrichment = my_de_results,
  contrast_name = "T2.minus.MSO=groupT2-groupMSO",
  ranking_method = "combined_score",
  filter_significant = FALSE,
  result_label = "T2_vs_MSO_enrichment",
  results_dir = "string_enrichment_output",
  api_key = "your_api_key",
  species = "9606"
)
}
}
