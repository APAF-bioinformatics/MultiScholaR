% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/limpa_functions.R
\name{generateLimpaQCPlots}
\alias{generateLimpaQCPlots}
\title{Generate limpa DPC Quality Control Diagnostic Plots}
\usage{
generateLimpaQCPlots(
  after_object,
  before_object = NULL,
  save_plots = TRUE,
  save_dir = "peptide_qc",
  plot_prefix = "limpa",
  verbose = TRUE
)
}
\arguments{
\item{after_object}{A PeptideQuantitativeData or ProteinQuantitativeData object containing limpa results}

\item{before_object}{Optional. The object before limpa processing for comparison plots.
If NULL, will try to extract from stored data or skip comparison plots.}

\item{save_plots}{Logical. Whether to save individual plots to files.}

\item{save_dir}{Optional directory path for saving plots. If NULL and save_plots=TRUE,
will attempt to use project directories.}

\item{plot_prefix}{String prefix for saved plot filenames.}

\item{verbose}{Logical. Whether to print progress messages.}
}
\value{
A composite ggplot object containing all diagnostic plots arranged in a grid
}
\description{
Creates a comprehensive set of diagnostic plots for limpa DPC imputation or quantification,
including detection probability curves, missing value comparisons, intensity distributions,
and summary statistics. Works with both peptide-level imputation and protein-level quantification.
}
\examples{
# For peptide-level limpa imputation
limpa_qc_fig <- generateLimpaQCPlots(
  after_object = peptide_ruv_normalised_imputed_obj,
  before_object = peptide_ruv_normalised_results_temp_obj
)

# For protein-level DPC quantification  
limpa_qc_fig <- generateLimpaQCPlots(
  after_object = protein_dpc_quant_obj,
  before_object = peptide_obj
)

}
